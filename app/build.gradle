apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.1"
    defaultConfig {
        applicationId "com.tubic.testapp"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {

        release {
            storeFile file('./../key.jks')
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        debug {
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        abortOnError false
    }

    productFlavors {
        prod {

        }
        mock {

        }
    }
    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if(variant.buildType.name.equals('release')
                && variant.getFlavors().get(0).name.equals('mock')) {
            variant.setIgnore(true);
        }
    }
}
retrolambda {
    defaultMethods false
    incremental true
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.ext.supportLibraryVersion"

    compile "com.davemorrissey.labs:subsampling-scale-image-view:3.6.0"

    // https://mvnrepository.com/artifact/org.apache.commons/commons-io
    compile group: 'org.apache.commons', name: 'commons-io', version: '1.3.2'

    //guava
    compile "com.google.guava:guava:$rootProject.guavaVersion"

    //picasso - image loader util
    compile "com.squareup.picasso:picasso:$rootProject.ext.picassoVersion"

    // dagger
    compile "com.google.dagger:dagger:$rootProject.ext.daggerVersion"
    apt "com.google.dagger:dagger-compiler:$rootProject.ext.daggerVersion"
    provided 'javax.annotation:jsr250-api:1.0'

    // rx
    compile "io.reactivex:rxandroid:$rootProject.ext.rxVersion"
    compile "io.reactivex:rxjava:$rootProject.ext.rxVersion"

    // retrofit & http
    compile "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofitVersion"
    compile "com.squareup.retrofit2:converter-gson:$rootProject.ext.retrofitVersion"
    compile "com.squareup.retrofit2:adapter-rxjava:$rootProject.ext.retrofitVersion"
    compile "com.squareup.okhttp3:logging-interceptor:$rootProject.ext.okhttpVersion"
    compile "com.squareup.okhttp3:okhttp-urlconnection:$rootProject.ext.okhttpVersion"

    // facebook
    compile "com.facebook.android:facebook-android-sdk:$rootProject.ext.facebookVersion"

    // test
    androidTestCompile "com.android.support.test.espresso:espresso-core:$rootProject.ext.espressoVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:$rootProject.ext.espressoVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-contrib:$rootProject.ext.espressoVersion"

    androidTestCompile "org.mockito:mockito-core:$rootProject.ext.mockitoCoreVersion"
    androidTestCompile "com.google.dexmaker:dexmaker-mockito:$rootProject.ext.dexmakerMockitoVersion"

    compile "com.android.support.test.espresso:espresso-idling-resource:$rootProject.ext.espressoVersion"

    testCompile "junit:junit:$rootProject.ext.junitVersion"
    testCompile "org.mockito:mockito-core:$rootProject.ext.mockitoCoreVersion"

    // Resolve conflicts between main and test APK:
    androidTestCompile "com.android.support:support-annotations:$rootProject.supportLibraryVersion"
    androidTestCompile "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    androidTestCompile "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    androidTestCompile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    androidTestCompile "com.android.support:design:$rootProject.supportLibraryVersion"
}


// load keystore properties
def keystorePropertiesFile = rootProject.file("keystore.properties");
if( keystorePropertiesFile.exists() ) {
    def keystoreProperties = new Properties()
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

    android {
        signingConfigs {
            release {
                storePassword keystoreProperties['storePassword']
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
            }

        }
    }
}
// end of load keystore properties